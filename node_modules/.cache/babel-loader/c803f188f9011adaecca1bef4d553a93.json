{"ast":null,"code":"import _slicedToArray from \"/Users/keisukeyoshida/js/dot-map-js/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/keisukeyoshida/js/dot-map-js/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport proj4 from 'proj4';\nimport inside from '@turf/boolean-point-in-polygon';\nfunction DottedMapWithoutCountries(_ref) {\n  var map = _ref.map,\n    _ref$avoidOuterPins = _ref.avoidOuterPins,\n    avoidOuterPins = _ref$avoidOuterPins === void 0 ? false : _ref$avoidOuterPins;\n  var points = map.points,\n    X_MIN = map.X_MIN,\n    Y_MAX = map.Y_MAX,\n    X_RANGE = map.X_RANGE,\n    Y_RANGE = map.Y_RANGE,\n    region = map.region,\n    grid = map.grid,\n    width = map.width,\n    height = map.height,\n    ystep = map.ystep;\n  return {\n    addPin: function addPin(_ref2) {\n      var lat = _ref2.lat,\n        lng = _ref2.lng,\n        data = _ref2.data,\n        svgOptions = _ref2.svgOptions;\n      var pin = this.getPin({\n        lat: lat,\n        lng: lng\n      });\n      var point = _objectSpread(_objectSpread({}, pin), {}, {\n        data: data,\n        svgOptions: svgOptions\n      });\n      points[[point.x, point.y].join(';')] = point;\n      return point;\n    },\n    getPin: function getPin(_ref3) {\n      var lat = _ref3.lat,\n        lng = _ref3.lng;\n      var _proj = proj4(proj4.defs('GOOGLE'), [lng, lat]),\n        _proj2 = _slicedToArray(_proj, 2),\n        googleX = _proj2[0],\n        googleY = _proj2[1];\n      if (avoidOuterPins) {\n        var wgs84Point = proj4(proj4.defs('GOOGLE'), proj4.defs('WGS84'), [googleX, googleY]);\n        if (!inside(wgs84Point, poly)) return;\n      }\n      var rawX = width * (googleX - X_MIN) / X_RANGE,\n        rawY = height * (Y_MAX - googleY) / Y_RANGE;\n      var y = Math.round(rawY / ystep);\n      if (y % 2 === 0 && grid === 'diagonal') {\n        rawX -= 0.5;\n      }\n      var x = Math.round(rawX);\n      var localx = x,\n        localy = Math.round(y) * ystep;\n      if (y % 2 === 0 && grid === 'diagonal') {\n        localx += 0.5;\n      }\n      var _proj3 = proj4(proj4.defs('GOOGLE'), proj4.defs('WGS84'), [localx * X_RANGE / width + X_MIN, Y_MAX - localy * Y_RANGE / height]),\n        _proj4 = _slicedToArray(_proj3, 2),\n        localLng = _proj4[0],\n        localLat = _proj4[1];\n      var pin = {\n        x: localx,\n        y: localy,\n        lat: localLat,\n        lng: localLng\n      };\n      return pin;\n    },\n    getPoints: function getPoints() {\n      return Object.values(points);\n    },\n    getSVG: function getSVG(_ref4) {\n      var _ref4$shape = _ref4.shape,\n        shape = _ref4$shape === void 0 ? 'circle' : _ref4$shape,\n        _ref4$color = _ref4.color,\n        color = _ref4$color === void 0 ? 'current' : _ref4$color,\n        _ref4$backgroundColor = _ref4.backgroundColor,\n        backgroundColor = _ref4$backgroundColor === void 0 ? 'transparent' : _ref4$backgroundColor,\n        _ref4$radius = _ref4.radius,\n        radius = _ref4$radius === void 0 ? 0.5 : _ref4$radius;\n      var getPoint = function getPoint(_ref5) {\n        var x = _ref5.x,\n          y = _ref5.y,\n          _ref5$svgOptions = _ref5.svgOptions,\n          svgOptions = _ref5$svgOptions === void 0 ? {} : _ref5$svgOptions;\n        var pointRadius = svgOptions.radius || radius;\n        if (shape === 'circle') {\n          return \"<circle cx=\\\"\".concat(x, \"\\\" cy=\\\"\").concat(y, \"\\\" r=\\\"\").concat(pointRadius, \"\\\" fill=\\\"\").concat(svgOptions.color || color, \"\\\" />\");\n        } else if (shape === 'hexagon') {\n          var sqrt3radius = Math.sqrt(3) * pointRadius;\n          var polyPoints = [[x + sqrt3radius, y - pointRadius], [x + sqrt3radius, y + pointRadius], [x, y + 2 * pointRadius], [x - sqrt3radius, y + pointRadius], [x - sqrt3radius, y - pointRadius], [x, y - 2 * pointRadius]];\n          return \"<polyline points=\\\"\".concat(polyPoints.map(function (point) {\n            return point.join(',');\n          }).join(' '), \"\\\" fill=\\\"\").concat(svgOptions.color || color, \"\\\" />\");\n        }\n      };\n      return \"<svg viewBox=\\\"0 0 \".concat(width, \" \").concat(height, \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" style=\\\"background-color: \").concat(backgroundColor, \"\\\">\\n        \").concat(Object.values(points).map(getPoint).join('\\n'), \"\\n      </svg>\");\n    },\n    image: {\n      region: region,\n      width: width,\n      height: height\n    }\n  };\n}\nexport default DottedMapWithoutCountries;","map":{"version":3,"names":["proj4","inside","DottedMapWithoutCountries","_ref","map","_ref$avoidOuterPins","avoidOuterPins","points","X_MIN","Y_MAX","X_RANGE","Y_RANGE","region","grid","width","height","ystep","addPin","_ref2","lat","lng","data","svgOptions","pin","getPin","point","_objectSpread","x","y","join","_ref3","_proj","defs","_proj2","_slicedToArray","googleX","googleY","wgs84Point","poly","rawX","rawY","Math","round","localx","localy","_proj3","_proj4","localLng","localLat","getPoints","Object","values","getSVG","_ref4","_ref4$shape","shape","_ref4$color","color","_ref4$backgroundColor","backgroundColor","_ref4$radius","radius","getPoint","_ref5","_ref5$svgOptions","pointRadius","concat","sqrt3radius","sqrt","polyPoints","image"],"sources":["/Users/keisukeyoshida/js/dot-map-js/node_modules/dotted-map/src/without-countries.js"],"sourcesContent":["import proj4 from 'proj4';\nimport inside from '@turf/boolean-point-in-polygon';\n\nfunction DottedMapWithoutCountries({ map, avoidOuterPins = false }) {\n  const {\n    points,\n    X_MIN,\n    Y_MAX,\n    X_RANGE,\n    Y_RANGE,\n    region,\n    grid,\n    width,\n    height,\n    ystep,\n  } = map;\n\n  return {\n    addPin({ lat, lng, data, svgOptions }) {\n      const pin = this.getPin({ lat, lng });\n      const point = { ...pin, data, svgOptions };\n\n      points[[point.x, point.y].join(';')] = point;\n\n      return point;\n    },\n    getPin({ lat, lng }) {\n      const [googleX, googleY] = proj4(proj4.defs('GOOGLE'), [lng, lat]);\n      if (avoidOuterPins) {\n        const wgs84Point = proj4(proj4.defs('GOOGLE'), proj4.defs('WGS84'), [\n          googleX,\n          googleY,\n        ]);\n        if (!inside(wgs84Point, poly)) return;\n      }\n      let [rawX, rawY] = [\n        (width * (googleX - X_MIN)) / X_RANGE,\n        (height * (Y_MAX - googleY)) / Y_RANGE,\n      ];\n      const y = Math.round(rawY / ystep);\n      if (y % 2 === 0 && grid === 'diagonal') {\n        rawX -= 0.5;\n      }\n      const x = Math.round(rawX);\n      let [localx, localy] = [x, Math.round(y) * ystep];\n      if (y % 2 === 0 && grid === 'diagonal') {\n        localx += 0.5;\n      }\n\n      const [localLng, localLat] = proj4(\n        proj4.defs('GOOGLE'),\n        proj4.defs('WGS84'),\n        [\n          (localx * X_RANGE) / width + X_MIN,\n          Y_MAX - (localy * Y_RANGE) / height,\n        ],\n      );\n\n      const pin = { x: localx, y: localy, lat: localLat, lng: localLng };\n\n      return pin;\n    },\n    getPoints() {\n      return Object.values(points);\n    },\n    getSVG({\n      shape = 'circle',\n      color = 'current',\n      backgroundColor = 'transparent',\n      radius = 0.5,\n    }) {\n      const getPoint = ({ x, y, svgOptions = {} }) => {\n        const pointRadius = svgOptions.radius || radius;\n        if (shape === 'circle') {\n          return `<circle cx=\"${x}\" cy=\"${y}\" r=\"${pointRadius}\" fill=\"${\n            svgOptions.color || color\n          }\" />`;\n        } else if (shape === 'hexagon') {\n          const sqrt3radius = Math.sqrt(3) * pointRadius;\n\n          const polyPoints = [\n            [x + sqrt3radius, y - pointRadius],\n            [x + sqrt3radius, y + pointRadius],\n            [x, y + 2 * pointRadius],\n            [x - sqrt3radius, y + pointRadius],\n            [x - sqrt3radius, y - pointRadius],\n            [x, y - 2 * pointRadius],\n          ];\n\n          return `<polyline points=\"${polyPoints\n            .map((point) => point.join(','))\n            .join(' ')}\" fill=\"${svgOptions.color || color}\" />`;\n        }\n      };\n\n      return `<svg viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\" style=\"background-color: ${backgroundColor}\">\n        ${Object.values(points).map(getPoint).join('\\n')}\n      </svg>`;\n    },\n    image: {\n      region,\n      width,\n      height,\n    },\n  };\n}\n\nexport default DottedMapWithoutCountries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}